#!/bin/sh
set -u

shell="$(snapctl get shell)"

echo "Checking: "${shell:-Ubuntu Frame}" installation (needed for all commands)"
if ! command -v "${shell:-ubuntu-frame}" > /dev/null
then
  echo " WARNING: "${shell:-Ubuntu Frame}" NOT installed. Please run the following:"
  echo "  sudo snap install "${shell:-ubuntu-frame}""
else
  echo " . OK . : "${shell:-Ubuntu Frame}" is installed"
fi

echo "Checking: "${shell:-Ubuntu Frame}" has login-session-control (needed to run a login shell)"
if ! snap connections "${shell:-ubuntu-frame}" | grep " :login-session-control" > /dev/null
then
  echo " WARNING: "${shell:-ubuntu-frame}":login-session-control NOT connected. Please run the following:"
  echo "  sudo snap connect "${shell:-ubuntu-frame}":login-session-control"
else
  echo " . OK . : "${shell:-ubuntu-frame}":login-session-control is connected"
fi

echo "Checking: shell-app option (needed for ${SNAP_INSTANCE_NAME}.shell and to run a login shell)"
shell_app="$(snapctl get shell-app)"
if [ "$shell_app" = "" ]; then
  echo " WARNING: shell-app not set. Please run the following (with the app you choose):"
  echo "  snap set ${SNAP_INSTANCE_NAME} shell-app=..."
elif ! command -v "${shell_app%% *}" > /dev/null; then
    echo " WARNING: shell-app not installed: ${shell_app}"
else
  echo " . OK . : shell-app is set (to '${shell_app}') and can be found"
fi

echo "Checking: osk option"
shell_osk="$(snapctl get osk)"
if [ "$shell_osk" != "" ]; then
  case "$shell_osk" in

  enable)
    if ! command -v ubuntu-frame-osk > /dev/null; then
      echo ' WARNING: "osk" is "enabled", but ubuntu-frame-osk not installed. Please run the following:'
      echo "  sudo snap install ubuntu-frame-osk"
      echo "  sudo snap connect ubuntu-frame-osk:wayland"
    else
      if ! snap connections ubuntu-frame-osk | grep " :wayland" > /dev/null; then
        echo " WARNING: ubuntu-frame-osk:wayland NOT connected. Please run the following:"
        echo "  sudo snap connect ubuntu-frame-osk:wayland"
      else
        echo ' . OK . : "osk" is "enabled" and set and "ubuntu-frame-osk" can be found'
      fi
    fi
    ;;
  disable)
      echo ' . OK . : "osk" is "disable"'
    ;;
  *) echo ' WARNING: "osk" must be "enable" or "disable"'
   ;;
  esac
else
  echo ' . OK . : "osk" is unset'
fi

echo "Checking: vnc-viewer option (needed for ${SNAP_INSTANCE_NAME}.vnc)"
vnc_viewer="$(snapctl get vnc-viewer)"
if [ "vnc_viewer" = "" ]; then
  echo " WARNING: vnc-viewer not set. Please run the following (with the app you choose):"
  echo "  snap set ${SNAP_INSTANCE_NAME} vnc-viewer=..."
elif ! command -v "${vnc_viewer%% *}" > /dev/null; then
    echo " WARNING: vnc-viewer not installed: ${vnc_viewer}"
else
  echo " . OK . : vnc-viewer is set (to '${vnc_viewer}') and can be found"
fi